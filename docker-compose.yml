version: '3.9'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    restart: unless-stopped
    env_file:
        - .env
    environment:
      DATABASE_URL: mysql://${MYSQL_USERNAME}:${MYSQL_PASSWORD}@168.138.131.182:${MYSQL_PORT}/${MYSQL_DATABASE}?createDatabaseIfNotExist=true
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}
    volumes:
      - .:/usr/src/app
    command: yarn start:dev
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - redis
      - mysql

  postgres:
    image: arm64v8/postgres:16.2-alpine3.19
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend

  redis: # Name of container
    image: arm64v8/redis:7.2.4-alpine3.19
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    volumes: 
      - redis:/data
    networks:
      - backend

  rabbitmq:
    image: arm64v8/rabbitmq:3.13.2-management-alpine
    restart: always
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - backend
      
networks:
  backend:
    driver: bridge

volumes:
  mysql:
  redis:
  rabbitmq:
    driver: local